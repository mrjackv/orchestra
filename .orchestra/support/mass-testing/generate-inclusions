#!/usr/bin/env python3

#
# This file is distributed under the MIT License. See LICENSE.md for details.
#

import argparse
import re
import sqlite3
from pathlib import Path

import yaml


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("input", help="Input database (main.db)")
    parser.add_argument("output", help="Output yml file")
    args = parser.parse_args()

    includes = set()

    if Path(args.output).exists():
        with open(args.output) as f:
            data = yaml.safe_load(f)
        includes.update(data.get("include", []))

    conn = sqlite3.connect(args.input)
    ok_binaries = conn.execute("SELECT name, input_name FROM main WHERE status = 'OK'").fetchall()
    for data in ok_binaries:
        final_name = Path(data[0]).parent / data[1].removesuffix(".bin")
        includes.add("^" + re.escape(str(final_name)) + "$")

    with open(args.output, "w") as f:
        f.write("# THIS FILE IS AUTOGENERATED, DO NOT EDIT MANUALLY\n")
        yaml.safe_dump({"include": sorted(includes)}, f)


if __name__ == "__main__":
    main()
